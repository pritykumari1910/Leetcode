/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

  TreeNode* helper(TreeNode *root, unordered_set<int>&s,vector<TreeNode*>&ans){

       if(root==NULL)
           return NULL;
       root->left=helper(root->left,s,ans);
       root->right=helper(root->right,s,ans);
       if(s.find(root->val)!=s.end()){
            if(root->left!=NULL)
                  ans.push_back(root->left);
            if(root->right!=NULL)
                    ans.push_back(root->right);


            return NULL;
        }
        else{
        return root;
        }                  
  }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
       vector<TreeNode*>ans;
       unordered_set<int>s;
       for(int &num:to_delete){
          s.insert(num);

        }
        helper(root,s,ans);

        if(s.find(root->val)==s.end()){
               ans.push_back(root);

        }
      return ans;
      
        
    }
};
